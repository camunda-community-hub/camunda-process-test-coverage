name: Compatibility check

on:
  push:
    branches:
      - '*'
      - '**/*'
      - 'master'

jobs:
  build:
    strategy:
      fail-fast: false
      # Build for three operating systems, currently JVMs 11, 17 and latest four Camunda versions (last two years)
      # We run Legacy support test on Ubuntu, JDK 1.8 until 7.17 (Release 2022).
      matrix:
        os:
          - 'ubuntu-latest'
          - 'windows-latest'
          - 'macos-latest'
        jdk:
          - '17'
          - '21'
        camunda-version:
          - '7.23' # 2025
          - '7.22' # 2024
          - '7.21' # 2024
          - '7.20' # 2023
        include:
          - os: 'ubuntu-latest'
            jdk: '8' # Checking legacy JDK 8 support with old Camunda versions
            camunda-version: '7.18'
          - os: 'ubuntu-latest'
            jdk: '11'
            camunda-version: '7.18'
          - os: 'ubuntu-latest'
            jdk: '11'
            camunda-version: '7.19'

    runs-on: ${{ matrix.os }}
    steps:
      - name: Set git core.longpaths flag 
        run: git config --global core.longpaths true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache .m2
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}

      - name: Prepare Maven Wrapper
        run: chmod +x ./mvnw

      - name: Check for valid camunda profile
        run: ./mvnw enforcer:enforce -f regression-tests -Drules=requireProfileIdsExist "-Pcamunda-bpm-engine-${{ matrix.camunda-version }}"

      - name: Build with Maven
        run: ./mvnw clean verify -U -B -T4 "-Pregression-test" "-Pcamunda-bpm-engine-${{ matrix.camunda-version }}" -DskipExamples -DskipPlugins
